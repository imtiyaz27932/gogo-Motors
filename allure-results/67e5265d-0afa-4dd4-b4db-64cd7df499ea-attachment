# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Header tests >> Verify that all the elements are clickable in the header top section
- Location: D:\gogomotor\tests\header\headerTest.spec.ts:17:9

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toHaveURL(expected)

Locator: locator(':root')
Expected string: "https://liveuat.gogomotor.com/wishlist"
Received string: "https://liveuat.gogomotor.com/en/wishlist"
Call log:
  - expect.toHaveURL with timeout 5000ms
  - waiting for locator(':root')
    - locator resolved to <html dir="ltr" lang="en" translate="no">…</html>
    - unexpected value "https://liveuat.gogomotor.com/en"
    8 × locator resolved to <html dir="ltr" lang="en" translate="no">…</html>
      - unexpected value "https://liveuat.gogomotor.com/en/wishlist"

    at HeaderPage.verifyClickFunctionality (D:\gogomotor\pages\headerPage.ts:58:33)
    at D:\gogomotor\tests\header\headerTest.spec.ts:18:9
```

# Test source

```ts
   1 | import { Page, expect } from "@playwright/test";
   2 | import path from "path";
   3 |
   4 | export class HeaderPage {
   5 |     private page: Page;
   6 |
   7 |     constructor(page: Page) {
   8 |         this.page = page;
   9 |     }
  10 |
  11 |     // Selectors
  12 |
  13 |     private logoicon = () => this.page.getByRole("link", { name: /GoGo Motor - Buy and Sell/i });
  14 |     private languageSelector = () => this.page.getByRole("button", { name: "Riyadh" });
  15 |     private wishListicon = () => this.page.getByRole("button", { name: "wishlist" });
  16 |     private loginicon = () => this.page.getByRole("button", { name: "login" });
  17 |     private arabicicon = () => this.page.getByRole("img", { name: "icon" });
  18 |     private newcars = () => this.page.getByRole('navigation').getByText('New Cars');
  19 |     private buysellcars = () => this.page.getByRole('navigation').getByText('Buy & Sell Used Cars');
  20 |     private deals = () => this.page.getByRole('navigation').getByText('Deals', { exact: true });
  21 |     private services = () => this.page.getByRole('navigation').getByText('Services')
  22 |
  23 |         ;
  24 |
  25 |     // Navigate to the home page
  26 |     async navigateToHomePage() {
  27 |         const baseUrl = process.env.BASE_URL;
  28 |         if (!baseUrl) {
  29 |             throw new Error("BASE_URL is not defined in environment variables.");
  30 |         }
  31 |
  32 |         await this.page.goto(baseUrl);
  33 |         await this.page.waitForLoadState("domcontentloaded");
  34 |         await expect(this.page).toHaveURL(new RegExp(`${baseUrl}.*`), {
  35 |             timeout: 10000,
  36 |         });
  37 |         console.log("✅ Current URL:", this.page.url());
  38 |     }
  39 |
  40 |     // Verify that all elements are displayed in the header
  41 |     async verifyHeaderElements() {
  42 |         await expect(this.logoicon()).toBeVisible();
  43 |         await expect(this.languageSelector()).toBeVisible();
  44 |         await expect(this.wishListicon()).toBeVisible();
  45 |         await expect(this.loginicon()).toBeVisible();
  46 |         await expect(this.arabicicon()).toBeVisible();
  47 |         await expect(this.newcars()).toBeVisible();
  48 |         await expect(this.buysellcars()).toBeVisible();
  49 |         await expect(this.deals()).toBeVisible();
  50 |         await expect(this.services()).toBeVisible();
  51 |         await this.page.screenshot({ path: "screehshots/headerelements.png" });
  52 |         console.log('All header elements are visible.');
  53 |     }
  54 |     
  55 |     async verifyClickFunctionality() {
  56 |         await this.wishListicon().click();
  57 |         await this.page.waitForTimeout(1000);
> 58 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/wishlist');
     |                                 ^ Error: Timed out 5000ms waiting for expect(locator).toHaveURL(expected)
  59 |         console.log('Wishlist icon clicked.');
  60 |         await this.loginicon().click();
  61 |         await this.page.waitForTimeout(1000);
  62 |         console.log('Login icon clicked.');
  63 |         await this.arabicicon().click();
  64 |         await this.page.waitForTimeout(1000)
  65 |         console.log('Arabic icon clicked.');
  66 |
  67 |     }
  68 |     async verifyTabNavigation() {
  69 |         await this.newcars().click();
  70 |         await this.page.waitForTimeout(1000);
  71 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/newcars');
  72 |         await this.buysellcars().click();
  73 |         await this.page.waitForTimeout(1000);
  74 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/used-cars/riyadh-surveyed');
  75 |         await this.deals().click();
  76 |         await this.page.waitForTimeout(1000);
  77 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/campaigns')
  78 |         await this.services().click();
  79 |         await this.page.waitForTimeout(1000);
  80 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/vas/warranty');
  81 |         await this.page.screenshot({ path: "screenshots/headerTabs.png" });
  82 |         console.log('All header tabs are clickable and navigated to the correct page.');
  83 |     }
  84 | }
```