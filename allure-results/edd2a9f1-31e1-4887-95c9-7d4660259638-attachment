# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Header tests >> Verify that all the elements are clickable in the header top section
- Location: D:\gogomotor\tests\header\headerTest.spec.ts:17:9

# Error details

```
Error: locator.click: Test timeout of 30000ms exceeded.
Call log:
  - waiting for getByRole('img', { name: 'icon' })
    - locator resolved to <img alt="icon" height="18" width="27.43" loading="eager" decoding="sync" class="object-contain" src="/images/ar-icon.png"/>
  - attempting click action
    2 × waiting for element to be visible, enabled and stable
      - element is visible, enabled and stable
      - scrolling into view if needed
      - done scrolling
      - <div class="fixed top-0 left-0 h-full w-full z-[101] flex items-end sm:items-center justify-center bg-black/80">…</div> intercepts pointer events
    - retrying click action
    - waiting 20ms
    2 × waiting for element to be visible, enabled and stable
      - element is visible, enabled and stable
      - scrolling into view if needed
      - done scrolling
      - <div class="fixed top-0 left-0 h-full w-full z-[101] flex items-end sm:items-center justify-center bg-black/80">…</div> intercepts pointer events
    - retrying click action
      - waiting 100ms
    41 × waiting for element to be visible, enabled and stable
       - element is visible, enabled and stable
       - scrolling into view if needed
       - done scrolling
       - <div class="fixed top-0 left-0 h-full w-full z-[101] flex items-end sm:items-center justify-center bg-black/80">…</div> intercepts pointer events
     - retrying click action
       - waiting 500ms

    at HeaderPage.verifyClickFunctionality (D:\gogomotor\pages\headerPage.ts:64:33)
    at D:\gogomotor\tests\header\headerTest.spec.ts:18:9
```

# Test source

```ts
   1 | import { Page, expect } from "@playwright/test";
   2 | import path from "path";
   3 |
   4 | export class HeaderPage {
   5 |     private page: Page;
   6 |
   7 |     constructor(page: Page) {
   8 |         this.page = page;
   9 |     }
  10 |
  11 |     // Selectors
  12 |
  13 |     private logoicon = () => this.page.getByRole("link", { name: /GoGo Motor - Buy and Sell/i });
  14 |     private languageSelector = () => this.page.getByRole("button", { name: "Riyadh" });
  15 |     private wishListicon = () => this.page.getByRole("button", { name: "wishlist" });
  16 |     private loginicon = () => this.page.getByRole("button", { name: "login" });
  17 |     private arabicicon = () => this.page.getByRole("img", { name: "icon" });
  18 |     private newcars = () => this.page.getByRole('navigation').getByText('New Cars');
  19 |     private buysellcars = () => this.page.getByRole('navigation').getByText('Buy & Sell Used Cars');
  20 |     private deals = () => this.page.getByRole('navigation').getByText('Deals', { exact: true });
  21 |     private services = () => this.page.getByRole('navigation').getByText('Services')
  22 |
  23 |         ;
  24 |
  25 |     // Navigate to the home page
  26 |     async navigateToHomePage() {
  27 |         const baseUrl = process.env.BASE_URL;
  28 |         if (!baseUrl) {
  29 |             throw new Error("BASE_URL is not defined in environment variables.");
  30 |         }
  31 |
  32 |         await this.page.goto(baseUrl);
  33 |         await this.page.waitForLoadState("domcontentloaded");
  34 |         await expect(this.page).toHaveURL(new RegExp(`${baseUrl}.*`), {
  35 |             timeout: 10000,
  36 |         });
  37 |         console.log("✅ Current URL:", this.page.url());
  38 |     }
  39 |
  40 |     // Verify that all elements are displayed in the header
  41 |     async verifyHeaderElements() {
  42 |         await expect(this.logoicon()).toBeVisible();
  43 |         await expect(this.languageSelector()).toBeVisible();
  44 |         await expect(this.wishListicon()).toBeVisible();
  45 |         await expect(this.loginicon()).toBeVisible();
  46 |         await expect(this.arabicicon()).toBeVisible();
  47 |         await expect(this.newcars()).toBeVisible();
  48 |         await expect(this.buysellcars()).toBeVisible();
  49 |         await expect(this.deals()).toBeVisible();
  50 |         await expect(this.services()).toBeVisible();
  51 |         await this.page.screenshot({ path: "screehshots/headerelements.png" });
  52 |         console.log('All header elements are visible.');
  53 |     }
  54 |     
  55 |     // Verify that all elements are clickable in the header top section 
  56 |     async verifyClickFunctionality() {
  57 |         await this.wishListicon().click();
  58 |         await this.page.waitForTimeout(1000);
  59 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/wishlist');
  60 |         console.log('Wishlist icon clicked.');
  61 |         await this.loginicon().click();
  62 |         await this.page.waitForTimeout(1000);
  63 |         console.log('Login icon clicked.');
> 64 |         await this.arabicicon().click();
     |                                 ^ Error: locator.click: Test timeout of 30000ms exceeded.
  65 |         await this.page.waitForTimeout(2000)
  66 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/')
  67 |         console.log('Arabic icon clicked.');
  68 |
  69 |     }
  70 |
  71 |     // Verify that all elements in the navigation menu are clickable
  72 |     async verifyTabNavigation() {
  73 |         await this.newcars().click();
  74 |         await this.page.waitForTimeout(1000);
  75 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/newcars');
  76 |         await this.buysellcars().click();
  77 |         await this.page.waitForTimeout(1000);
  78 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/used-cars/riyadh-surveyed');
  79 |         await this.deals().click();
  80 |         await this.page.waitForTimeout(1000);
  81 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/campaigns')
  82 |         await this.services().click();
  83 |         await this.page.waitForTimeout(1000);
  84 |         await expect(this.page).toHaveURL('https://liveuat.gogomotor.com/en/vas/warranty');
  85 |         await this.page.screenshot({ path: "screenshots/headerTabs.png" });
  86 |         console.log('All header tabs are clickable and navigated to the correct page.');
  87 |     }
  88 | }
```